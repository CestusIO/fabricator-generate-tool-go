// Code generated by fabricator-generate-plugin-go
//
// Modifications in code regions will be lost during regeneration!

package fabricatorgeneratetoolgo_test

import (
	"os"

	fabricatorgeneratetoolgo "code.cestus.io/tools/fabricator-generate-tool-go/pkg/fabricator-generate-tool-go"
	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

var _ = Describe("Config", func() {
	It("Deserializes a fabricator config", func() {
		file, err := os.Open("./testdata/deserialize.yml")
		Expect(err).ToNot(HaveOccurred())
		config, err := fabricatorgeneratetoolgo.LoadPluginConfig(file)
		Expect(err).ToNot(HaveOccurred())
		expected := fabricatorgeneratetoolgo.PluginConfig{
			ApiVersion: "fabricator.cestus.io/v1alpha1",
			Kind:       "Config",
			Components: []fabricatorgeneratetoolgo.PluginComponent{
				{
					Name:      "fabricator-generate-tool-go",
					Generator: "fabricator-generate-tool-go",
					Spec: fabricatorgeneratetoolgo.Spec{
						PinDependency:     nil,
						ReplaceDependency: nil,
						ToolDependency:    nil,
						ToolName:          "wombat",
						Commands: []fabricatorgeneratetoolgo.Command{
							{
								Name: "test",
								Flags: []fabricatorgeneratetoolgo.Flag{
									{
										Name:    "all",
										Type:    "bool",
										Default: "false",
										Usage:   "set to true",
									},
									{
										Name:    "num32",
										Type:    "int",
										Default: "-1",
										Usage:   "int32 value",
									},
									{
										Name:    "num64",
										Type:    "int64",
										Default: "-1",
										Usage:   "int64 value",
									},
									{
										Name:    "unum32",
										Type:    "uint",
										Default: "1",
										Usage:   "uint32 value",
									},
									{
										Name:    "unum64",
										Type:    "uint64",
										Default: "1",
										Usage:   "uint64 value",
									},
									{
										Name:    "str",
										Type:    "string",
										Default: `"default string"`,
										Usage:   "a string",
									},
									{
										Name:    "fl",
										Type:    "float64",
										Default: "1.02",
										Usage:   "float64 value",
									},
								},
							},
							{
								Name: "ls",
								Flags: []fabricatorgeneratetoolgo.Flag{
									{
										Name:    "all",
										Type:    "bool",
										Default: "false",
										Usage:   "set to true",
									},
								},
							},
						},
					},
				},
			},
		}
		Expect(config).To(Equal(expected))
	})
})
